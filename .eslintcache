[{"/home/spik/WebstormProjects/game/src/App.tsx":"1","/home/spik/WebstormProjects/game/src/menu.tsx":"2","/home/spik/WebstormProjects/game/src/gameWindow.tsx":"3","/home/spik/WebstormProjects/game/src/game/game.ts":"4","/home/spik/WebstormProjects/game/src/game/timer.ts":"5","/home/spik/WebstormProjects/game/src/index.tsx":"6","/home/spik/WebstormProjects/game/src/game/storage.ts":"7","/home/spik/WebstormProjects/game/src/game/gameObject.ts":"8","/home/spik/WebstormProjects/game/src/game/display.ts":"9"},{"size":1479,"mtime":1609932528476,"results":"10","hashOfConfig":"11"},{"size":2434,"mtime":1609934865797,"results":"12","hashOfConfig":"11"},{"size":292,"mtime":1609912003047,"results":"13","hashOfConfig":"11"},{"size":2234,"mtime":1609932603214,"results":"14","hashOfConfig":"11"},{"size":577,"mtime":1609685171084,"results":"15","hashOfConfig":"11"},{"size":223,"mtime":1609682018317,"results":"16","hashOfConfig":"11"},{"size":939,"mtime":1609932942602,"results":"17","hashOfConfig":"11"},{"size":411,"mtime":1609920520956,"results":"18","hashOfConfig":"11"},{"size":1341,"mtime":1609933313902,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1xx862s",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/spik/WebstormProjects/game/src/App.tsx",["41"],"import React, {\n  FC,\n  useState,\n  useRef,\n  useEffect,\n  ChangeEvent\n} from 'react';\nimport { Menu } from \"./menu\";\nimport { GameWindow } from \"./gameWindow\";\n\nimport { Game, ISettings } from \"./game/game\";\n\nimport './App.css';\n\n\nconst initState: ISettings = {\n  tickTime: 20,\n  objectSize: 10,\n  resolution: window.innerWidth > 500 ? 800 : 300,\n  density: 2,\n}\n\nconst minValues: ISettings = {\n  tickTime: 20,\n  objectSize: 5,\n  resolution: 50,\n  density: 2,\n}\n\nexport const App: FC = () => {\n  const [ state, setState ] = useState<ISettings>(initState);\n  const handleChangeSettings = (e: ChangeEvent<HTMLInputElement>) => {\n    // @ts-ignore\n    if (minValues[e.target.name] > e.target.value) return;\n    setState({\n      ...state,\n      [ e.target.name ]: e.target.value,\n    });\n  }\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  let game: Game;\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      game = new Game(\n        { ...state },\n        canvasRef.current\n      );\n    }\n  }, [state])\n\n  const handleStartGame = () => game.start();\n  const handleStopGame = () => game.stop();\n  const handleRestartGame = () => game.restart();\n  return (\n    <div className=\"App\">\n      <Menu\n        handleChange={handleChangeSettings}\n        handleStartGame={handleStartGame}\n        handleStopGame={handleStopGame}\n        handleRestartGame={handleRestartGame}\n        { ...state }\n      />\n      <GameWindow\n        canvasRef={canvasRef}\n      />\n    </div>\n  );\n}\n",["42","43"],"/home/spik/WebstormProjects/game/src/menu.tsx",[],"/home/spik/WebstormProjects/game/src/gameWindow.tsx",[],"/home/spik/WebstormProjects/game/src/game/game.ts",[],"/home/spik/WebstormProjects/game/src/game/timer.ts",[],"/home/spik/WebstormProjects/game/src/index.tsx",[],["44","45"],"/home/spik/WebstormProjects/game/src/game/storage.ts",[],"/home/spik/WebstormProjects/game/src/game/gameObject.ts",[],"/home/spik/WebstormProjects/game/src/game/display.ts",[],{"ruleId":"46","severity":1,"message":"47","line":47,"column":14,"nodeType":"48","endLine":50,"endColumn":8},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},"react-hooks/exhaustive-deps","Assignments to the 'game' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-global-assign","no-unsafe-negation"]